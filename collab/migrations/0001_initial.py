# Generated by Django 3.2.5 on 2021-10-12 20:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Collab',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.PositiveIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date')),
                ('description', models.TextField(blank=True, max_length=1000)),
                ('city', models.CharField(max_length=50)),
                ('archived', models.BooleanField(default=False, verbose_name='Archive')),
                ('collaborators', models.ManyToManyField(related_name='collaborators', through='collab.Collab', to=settings.AUTH_USER_MODEL)),
                ('founder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('matches', models.ManyToManyField(related_name='matches', through='collab.Match', to=settings.AUTH_USER_MODEL)),
                ('skills_needed', taggit.managers.TaggableManager(help_text='A comma-separated list of skills', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Skills Needed')),
            ],
        ),
        migrations.CreateModel(
            name='Technology',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SocialProj',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('ps', 'fa fa-globe fa-3x'), ('gh', 'fa fa-github fa-3x'), ('li', 'fa fa-linkedin fa-3x'), ('tw', 'fa fa-twitter fa-3x'), ('tl', 'fa fa-trello fa-3x'), ('fb', 'fa fa-facebook-square fa-3x'), ('ig', 'fa fa-instagram fa-3x'), ('yt', 'fa fa-youtube fa-3x')], default='gh', max_length=2)),
                ('url', models.URLField(blank=True, null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='collab.project')),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='technologies',
            field=models.ManyToManyField(to='collab.Technology'),
        ),
        migrations.AddField(
            model_name='match',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='collab.project'),
        ),
        migrations.AddField(
            model_name='match',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='collab',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='collab.project'),
        ),
        migrations.AddField(
            model_name='collab',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
